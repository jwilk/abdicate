#!/usr/bin/python3

# Copyright © 2014 Jakub Wilk <jwilk@jwilk.net>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the “Software”), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

import argparse
import fcntl
import os
import re
import struct
import subprocess as ipc
import sys
import tempfile
import termios
import urllib

try:
    import readline
except ImportError:
    pass

try:
    import aalib
    from PIL import Image, ImageOps
except ImportError:
    aalib = None

import requests
import urllib3

captcha_image_re = re.compile(
    "<img src='([\w+.]+[?]PHPSESSID=(\w+))' id='captcha'>"
)

class ScrapingError(RuntimeError):
    pass

def show_image_see(path, *, options):
    cmdline = ['see', path]
    if options.debug:
        cmdline[1:1] = ['--debug']
    ipc.check_call(cmdline)

def ioctl_GWINSZ(fp):
    y, x = struct.unpack('hh', fcntl.ioctl(fp, termios.TIOCGWINSZ, '\0' * 4))
    return x, y

def get_terminal_size(fp):
    try:
        return ioctl_GWINSZ(fp.fileno())
    except Exception:
        pass
    try:
        return tuple(
            int(os.getenv(x))
            for x in ('COLUMNS', 'LINES')
        )
    except Exception:
        return (80, 25)

def show_image_aalib(path, *, options):
    (twidth, theight) = get_terminal_size(sys.stdout);
    if os.getenv('TERM') == 'linux':
        screen = aalib.LinuxScreen
    else:
        screen = aalib.AnsiScreen
    screen = screen(
        width=twidth,
        height=(theight - 4)
    )
    image = Image.open(path)
    image = image.convert('L')
    image = ImageOps.invert(image)
    bbox = image.getbbox()
    image = image.crop(bbox)
    image = image.resize(screen.virtual_size)
    screen.put_image((0, 0), image)
    print(screen.render())

if aalib:
    show_image = show_image_aalib
else:
    show_image = show_image_see

def main():
    ap = argparse.ArgumentParser()
    ap.add_argument('--debug', action='store_true')
    options = ap.parse_args()
    if options.debug:
        urllib3.add_stderr_logger()
    session = requests.Session()
    session.trust_env = False
    session.headers['User-Agent'] = 'Mozilla/5.0 (Windows NT 6.1; rv:17.0) Gecko/20100101 Firefox/17.0'
    base_url = 'http://bdi.free.aero2.net.pl:8080/'
    while True:
        response = session.post(base_url, data=dict(viewForm='true'))
        match = captcha_image_re.search(response.text)
        if match is None:
            raise ScrapingError
        url = urllib.parse.urljoin(base_url, match.group(1))
        session_id = match.group(2)
        response = session.get(url)
        with tempfile.NamedTemporaryFile(prefix='aero2.', suffix='.jpeg') as img:
            img.write(response.content)
            img.flush()
            show_image(img.name, options=options)
            captcha = input('captcha: ')
            captcha = ' '.join(captcha.split())
        if not captcha:
            continue
        response = session.post(base_url, data=dict(
            viewForm=True,
            captcha=captcha,
            PHPSESSID=session_id,
        ))
        if b'i ponownie' in response.content:
            break

if __name__ == '__main__':
    main()

# vim:ts=4 sw=4 et
